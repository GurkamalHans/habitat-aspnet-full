$ProgressPreference="SilentlyContinue"
Write-Host "Ensuring xWebAdministration DSC resources are installed..."
Install-Module xWebAdministration -Force | Out-Null

Write-Host "Compiling DSC mof..."
. (Join-Path {{pkg.svc_config_path}} website.ps1)
$mof = NewWebsite -OutputPath "{{pkg.svc_data_path}}"

# Need to move xWebAdministration because LCM is not honoring PS Core's PSModulePath
$mod = (Get-Module xWebAdministration -ListAvailable).ModuleBase
$machine_mod = "C:\Program Files\windowsPowerShell\Modules\xWebAdministration"
if(Test-Path $machine_mod) { Remove-Item $machine_mod -Recurse -Force }
Move-Item $mod $machine_mod -Force

$configurationData = Get-Content $mof.FullName -Encoding Byte -ReadCount 0
$totalSize = [System.BitConverter]::GetBytes($configurationData.Length + 4)
$configurationData = $totalSize + $configurationData

Write-Host "Applying DSC configuration..."
Invoke-CimMethod -ComputerName localhost -Namespace "root/Microsoft/Windows/DesiredStateConfiguration" -ClassName "MSFT_DSCLocalConfigurationManager" -MethodName "SendConfigurationApply" -Arguments @{ConfigurationData = $configurationData; Force = $true}

try {
    Write-Host "{{pkg.name}} is running"
    $running = $true
    while($running) {
        Start-Sleep -Seconds 1
        $resp = Invoke-WebRequest "http://localhost:{{cfg.port}}/{{cfg.app_name}}" -Method Head
        if($resp.StatusCode -ne 200) { $running = $false }
    }
}
catch {
    Write-Host "{{pkg.name}} HEAD check failed"
}
finally {
    # Add any cleanup here which will run after supervisor stops the service
    Write-Host "{{pkg.name}} is stoping..."
    ."$env:SystemRoot\System32\inetsrv\appcmd.exe" stop apppool "{{cfg.app_pool}}"
    ."$env:SystemRoot\System32\inetsrv\appcmd.exe" stop site "{{cfg.site_name}}"
    Write-Host "{{pkg.name}} has stopped"
}
